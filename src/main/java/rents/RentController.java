package rents;

import javax.validation.Valid;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import rents.Room;


@Controller    // This means that this class is a Controller
@RequestMapping(path="/room") // This means URL's start with /room (after Application path)

public class RentController {
	@Autowired // This means to get the bean called rentalRepository
    // Which is auto-generated by Spring, we will use it to handle the data
	private rentalRepository rentalRepository;


	@GetMapping(path="/add") // Map ONLY GET Requests
public @ResponseBody String addNewRoom (@RequestParam String inRmNum, @RequestParam String inAddress, @RequestParam String inCity, 
		@RequestParam String inState, @RequestParam String inZip, @RequestParam String inPrice, @RequestParam String inDescript,
		@RequestParam String inRules, @RequestParam boolean inWifi, @RequestParam String inCable,
		@RequestParam boolean inPBath){
		// @ResponseBody means the returned String is the response, not a view name
	// @RequestParam means it is a parameter from the GET or POST request

	Room r = new Room();
	r.setModRmNum(inRmNum);
	r.setModAddress(inAddress);
	r.setModCity(inCity);
	r.setModState(inState);
	r.setModZipCode(inZip);
	r.setModPrice(inPrice);
	r.setModDescript(inDescript);
	r.setModRules(inRules);
	r.setModWifi(inWifi);
	r.setModCable(inCable);
	r.setModPBath(inPBath);
	rentalRepository.save(r);
	
	
	return "rmAdd_UpdateInHTML";
}
		
	@GetMapping("/")
	public String MainMenuForm(Model model){
		model.addAttribute("roomlist", new Room());
		//START HERE TO DISPLAY THE MAIN MENU TO SHOW LIST
		return "MainMenuHTML";
	}
	
	
	@GetMapping("/room")
	public String roomForm(Model model){
		model.addAttribute("roomlist", new Room());
		return "rmListOutHTML";
	}	
	
	@PostMapping("/room")
	public String roomSubmit(@Valid Room roomlist, BindingResult bindingResult){
		if (bindingResult.hasErrors()){
			return "rmListHTML";
			
		}
		return "redirect:/add";
	}
	
	@RequestMapping("/list")
    public String listBooks(Model model){
        model.addAttribute("", Repository.findAll());
        return "list";
    }
	
	
	@GetMapping(path="/all")
	public @ResponseBody Iterable<Room> getAllRooms()
	{
	return rentalRepository.findAll();
	}

}
